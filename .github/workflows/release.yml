name: Release

on:
  push:
    tags: ['v*']

permissions:
  contents: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry --version

      - name: Install dependencies
        run: |
          poetry install --with test,dev --no-interaction
          poetry show

      - name: Run tests
        run: |
            poetry run pytest -v

  release:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Determine release type
        id: release-type
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "type=release" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} =~ ^refs/tags/v.*-alpha|beta|rc ]]; then
            echo "type=prerelease" >> $GITHUB_OUTPUT
          else:
            echo "type=draft" >> $GITHUB_OUTPUT
          fi

      - name: Extract release notes from tag
        id: changelog
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Release version: $VERSION"
          
          echo "Extracting message from tag v$VERSION..."
          
          # Extract the message from the annotated tag
          git tag -l --format='%(contents)' "v$VERSION" > RELEASE_NOTES.md
          
          # Check if the tag message was extracted
          if [ ! -s RELEASE_NOTES.md ]; then
            echo "Warning: Could not extract tag message for v$VERSION"
            echo "Creating simple release notes..."
            echo "# Release v$VERSION" > RELEASE_NOTES.md
            echo "" >> RELEASE_NOTES.md
            echo "See CHANGELOG.md for details." >> RELEASE_NOTES.md
          fi
          
          echo "Release notes content:"
          cat RELEASE_NOTES.md

      - name: Build package
        run: poetry build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          body_path: RELEASE_NOTES.md
          draft: ${{ steps.release-type.outputs.type == 'draft' }}
          prerelease: ${{ steps.release-type.outputs.type == 'prerelease' }}
